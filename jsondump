#!/usr/bin/perl -w

use strict;
use JSON;
use Scalar::Util qw(blessed reftype);
use YAML::Tiny qw(Dump);
use open qw(:std :utf8);


unshift @ARGV, '-' unless @ARGV;

for my $file (@ARGV) {
  local $/;
  open my $fh, "<$file" or die "Can't open: $file\n";
  my $text = <$fh>;
  close $fh;
  # decode_json expects binary utf8 bytes, not perl utf8 chars
  utf8::encode($text);
  my $data = decode_json($text);
  stringify_objects($data);
  print Dump($data), "\n";
}

# Stringify all objects in $hash:
sub stringify_objects {
  for my $val (@_) {
    next unless my $ref = reftype $val;
    if (blessed $val) { $val = "$val" }
    elsif ($ref eq 'ARRAY') { stringify_objects(@$val) }
    elsif ($ref eq 'HASH')  { stringify_objects(values %$val) }
  }
}
